name: release

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    uses: ./.github/workflows/test.yml
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version
        id: version-check
        run: |
          VERSION=$(./scripts/is-newer-version.bash)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          if [ "$VERSION" != "0" ]; then
            echo "New version detected: $VERSION"
          else
            echo "No new version to release"
          fi

      - name: Push tag
        if: steps.version-check.outputs.version != '0'
        id: push-tag
        run: |
          tag="v${{ steps.version-check.outputs.version }}"
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "${tag}" -m "Release ${tag}"
          git push origin "${tag}"
          echo "tag_name=${tag}" >> $GITHUB_OUTPUT

      - name: Checkout
        if: steps.version-check.outputs.version != '0'
        uses: actions/checkout@v4

      - name: Setup Rust
        if: steps.version-check.outputs.version != '0'
        uses: MatteoH2O1999/setup-rust@v1

      - name: Cache Rust dependencies
        if: steps.version-check.outputs.version != '0'
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Build project
        if: steps.version-check.outputs.version != '0'
        run: cargo build --release
        shell: bash

      - name: Create release
        if: steps.version-check.outputs.version != '0'
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: "v${{ steps.version-check.outputs.version }}"
          artifacts: "./target/release/coro"

      - name: Publish project
        if: steps.version-check.outputs.version != '0'
        run: |
          ./scripts/publish-crates-io.bash -n -e coro-cli ${{ secrets.CRATES_IO_TOKEN }}  # Dry run check, exclude coro-cli
          ./scripts/publish-crates-io.bash -y -e coro-cli ${{ secrets.CRATES_IO_TOKEN }}  # Actual publish with auto-confirm, exclude coro-cli
        shell: bash

      # - name: Setup Pages
      #   uses: actions/configure-pages@v4

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ""

      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4

      - name: Delete tag if failure or cancelled
        if: (cancelled() || failure()) && steps.push-tag.outputs.tag_name != ''
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git push --delete origin "${{ steps.push-tag.outputs.tag_name }}"
          git tag -d "${{ steps.push-tag.outputs.tag_name }}"
